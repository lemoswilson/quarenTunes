import mongoose, { Schema, Document } from 'mongoose';
import { UserModelType } from './user.model'

interface effect {
    User: UserModelType['_id'],
    wet: any[],
    frequency: any[],
    type: any[],
    depth: any[],
    baseFrequency: any[],
    octaves: any[],
    filter: {
        Q: any[],
        rolloff: any[],
        type: any[],
    },
    bits: any[],
    order: any[],
    oversample: any[],
    feedback: any[],
    delayTime: any[],
    spread: any[],
    distortion: any[],
    maxDelay: any[],
    dampening: any[],
    roomSize: any[],
    stages: any[],
    phaserQ: any[],
    pitch: any[],
    windowSize: any[],
    width: any[],
    attack: any[],
    release: any[],
    ratio: any[],
    threshold: any[],
    knee: any[],
    high: any,
    low: any,
    lowFrequency: any[],
    highFrequency: any[],
    rolloff: any[],
    smoothing: any[],
}

export interface EffectModel extends effect, Document { }

const EFfectSchema: Schema = new Schema({
    User: { type: Schema.Types.ObjectId, required: true },
    wet: Schema.Types.Mixed,
    frequency: Schema.Types.Mixed,
    type: Schema.Types.Mixed,
    depth: Schema.Types.Mixed,
    baseFrequency: Schema.Types.Mixed,
    octaves: Schema.Types.Mixed,
    filter: {
        Q: Schema.Types.Mixed,
        rolloff: Schema.Types.Mixed,
        type: Schema.Types.Mixed,
    },
    bits: Schema.Types.Mixed,
    order: Schema.Types.Mixed,
    oversample: Schema.Types.Mixed,
    feedback: Schema.Types.Mixed,
    delayTime: Schema.Types.Mixed,
    spread: Schema.Types.Mixed,
    distortion: Schema.Types.Mixed,
    maxDelay: Schema.Types.Mixed,
    dampening: Schema.Types.Mixed,
    roomSize: Schema.Types.Mixed,
    stages: Schema.Types.Mixed,
    phaserQ: Schema.Types.Mixed,
    pitch: Schema.Types.Mixed,
    windowSize: Schema.Types.Mixed,
    width: Schema.Types.Mixed,
    attack: Schema.Types.Mixed,
    release: Schema.Types.Mixed,
    ratio: Schema.Types.Mixed,
    threshold: Schema.Types.Mixed,
    knee: Schema.Types.Mixed,
    high: Schema.Types.Mixed,
    low: Schema.Types.Mixed,
    lowFrequency: Schema.Types.Mixed,
    highFrequency: Schema.Types.Mixed,
    rolloff: Schema.Types.Mixed,
    smoothing: Schema.Types.Mixed,
}, { timestamps: true })


export default mongoose.model<EffectModel>('Effect', EFfectSchema);